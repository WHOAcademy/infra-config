apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    backup: postgresql
  name: sso-postgresql-backup
  namespace: labs-staging
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  jobTemplate:
     metadata:
       creationTimestamp: null
     spec:
       backoffLimit: 0
       template:
         metadata:
           creationTimestamp: null
         spec:
           activeDeadlineSeconds: 300
           containers:
           - env:
             - name: POSTGRESQL_USER
               value: "sso"
             - name: POSTGRESQL_DATABASE
               value: "sso"
             - name: POSTGRESQL_SVC_HOSTNAME
               value: "sso-postgresql"
             - name: PGPASSWORD
               value: "123456"
             - name: BACKUP_NAME
               value: "keycloak-db"
             - name: STORAGE_CONN_STR
               valueFrom:
                 secretKeyRef:
                   name: azure-storage-account-conn-string 
                   key: connection_string
             - name: STORAGE_CONTAINER_NAME
               valueFrom:
                 secretKeyRef:
                   name: azure-storage-container 
                   key: container_name
             - name: ENCRYPT_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: backup-encryption
                   key: password
             command:
             - /bin/bash
             - /opt/backup/backup.sh
             image: image-registry.openshift-image-registry.svc:5000/labs-staging/backup-runner 
             imagePullPolicy: IfNotPresent
             name: sso-postgresql-backup
             volumeMounts:
             - name: backup-cm
               mountPath: /opt/backup
             resources:
               request:
                 cpu: 100m
                 memory: 50Mi
               limits:
                 cpu: 1
                 memory: 512Mi
           restartPolicy: Never
           serviceAccount: backup
           serviceAccountName: backup
           volumes:
           - name: backup-cm
             configMap:
               name: backup-scripts 
               items:
               - key: backup.sh 
                 path: backup.sh
               - key: create-container.py
                 path: create-container.py
               - key: py-requirements.txt
                 path: py-requirements.txt
               - key: upload-blob.py
                 path: upload-blob.py
  schedule: '0 3 * * *'
